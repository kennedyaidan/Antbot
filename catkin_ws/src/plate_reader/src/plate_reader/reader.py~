#!/usr/bin/env python

import os
import sys
import time
import datetime

import rospy
import requests
import cv2
from std_msgs.msg import String
import numpy as np
from PIL import Image

from db import Db

db = Db()

def read_plate(_):
    cap = cv2.VideoCapture(1)
    _,img = cap.read()
    t = int(time.time())
    save_dir = '../data/{}'.format(datetime.datetime.now().strftime("%Y-%m-%d"))
    if not os.path.isdir(save_dir):
        os.makedirs(save_dir)
    cv2.imwrite(os.path.join(save_dir, 'plate_{}.jpg'.format(t)), img)
    rospy.loginfo('saved image')
    time.sleep(1)
    with open('{}/plate_{}.jpg'.format(save_dir, t), 'rb') as f:
        response = requests.post(
            'https://platerecognizer.com/plate-reader/',
            files=dict(upload=f),
            headers={'Authorization': 'Token ' + '6aa8435106c4ce07b0d2608f1057f2fee9630f37'})
    try:
        plate_seq = response.json()['results'][0]['plate']
    except KeyError:
        rospy.loginfo('Could not read plate')
        return
    except IndexError:
        rospy.loginfo('Could not read plate')
        return

    rospy.loginfo('Read plate: {}'.format(plate_seq))

    # Add to db
    db.add_plate(plate_seq)



if __name__ == '__main__':
    rospy.init_node('reader')
    rospy.Subscriber('/read_plate', String, read_plate)

    rospy.loginfo('Starting plate reader node...')
    rospy.spin()
